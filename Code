#Taveler Aid  : Currency Converter 
#Project by Maggie Wilson


#importing tkinter and messagebox
import tkinter as tk
from tkinter import *
import tkinter.messagebox
root = tk.Tk() 


#downloading image and setting background
my_pic=PhotoImage(file= r"C:\Users\maggi\OneDrive\Pictures\currency.png")
#creating image label
my_label=Label(root,image=my_pic)
my_label.place(x=0,y=0,relwidth=1, relheight=1)









root.title("Traveler Aid : Currency Conversion")

Tops = Frame(root,bg = 'black',pady = 2, width =2000, height = 100, relief = "ridge")
Tops.grid(row=0,column=0)

headlabel = tk.Label(Tops,font=('lato black', 19,'bold'), text = "      Traveler's Aid  :    Currency Converter  ", bg= 'white',fg='black') 
headlabel.grid(row=1, column=0,sticky=W)
 
variable1 = tk.StringVar(root) 
variable2 = tk.StringVar(root) 
 
variable1.set("currency") 
variable2.set("currency") 



#downloading forex_python
def RealTimeCurrencyConversion(): 
    from forex_python.converter import CurrencyRates
    c=CurrencyRates()
    
#trying and failing to add bitcoin to currency list

    from_currency = variable1.get() 
    to_currency = variable2.get()
    
    if (Amount1_field.get()==""):
        tkinter.messagebox.showinfo("ERROR","Amount Not Entered.\n Please enter a valid amount.")
        
    elif (from_currency=="currency" or to_currency=="currency"):
        tkinter.messagebox.showinfo("ERROR","No Currency Not Selected.\n Please choose a valid currency to convert from.")
        
    else:
        new_amt = c.convert(from_currency,to_currency,float(Amount1_field.get()))
        new_amount = float("{:.2f}".format(new_amt))
        Amount2_field.insert(0, str(new_amount)) 
# clear all button
def clear_all() : 
	Amount1_field.delete(0, tk.END) 
	Amount2_field.delete(0, tk.END)
    
    
CurrenyCode_list = ["EUR","IDR","BGN","ILS","GBP","DKK","CAD","JPY","HUF","RON","MYR","SEK","SGD","HKD","AUD","CHF","KRW","CNY","TYR","HRK","NZD","THB","USD","NOK","RUB","INR","MXN","CZK","BRL","PLN","PHP","ZAR","BTC"]









#setting the background and design
root.configure(background = 'white') 
root.geometry("515x515") 

Label_1 =Label(root, font=('helvetica', 27,'bold'), text="",padx=2,pady=2, bg="white",fg ="black")
Label_1.grid(row=1, column=0,sticky=W)


label1 = tk.Label(root,font=('helvetica', 15,'bold'), text = "\t  Amount  :  ", bg="white",fg = "black") 
label1.grid(row=2, column=0,sticky=W)

label1 = tk.Label(root,font=('helvetica', 15,'bold'), text = "\t  Currency  :  ", bg="white",fg = "black") 
label1.grid(row=3, column=0,sticky=W)

label1 = tk.Label(root,font=('helvetica', 15,'bold'), text = "\t  Convert To  :  ", bg="white",fg = "black") 
label1.grid(row=4, column=0,sticky=W)

label1 = tk.Label(root,font=('helvetica', 14,'bold'), text = "Converted Amount as of 3PM CET:  ", bg="white",fg = "black") 
label1.grid(row=8, column=0,sticky=W)


Label_1 =Label(root, font=('helvetica', 7,'bold'), text="",padx=2,pady=2, bg="white",fg ="black")
Label_1.grid(row=5, column=0,sticky=W)

Label_1 =Label(root, font=('helvetica', 7,'bold'), text="",padx=2,pady=2, bg="white",fg ="black")
Label_1.grid(row=7, column=0,sticky=W)





#creating dropdown menus
FromCurrency_option = tk.OptionMenu(root, variable1, *CurrenyCode_list) 
ToCurrency_option = tk.OptionMenu(root, variable2, *CurrenyCode_list) 

FromCurrency_option.grid(row = 3, column = 0, ipadx = 45,sticky=E) 
ToCurrency_option.grid(row = 4, column = 0, ipadx = 45,sticky=E) 




Amount1_field = tk.Entry(root) 
Amount1_field.grid(row=2,column=0,ipadx =28,sticky=E)

Amount2_field = tk.Entry(root)
Amount2_field.grid(row=8,column=0,ipadx =31,sticky=E) 




Label_9 =Button(root, font=('arial', 15,'bold'), text="   Convert  ",padx=2,pady=2, bg="blue",fg = "white",command=RealTimeCurrencyConversion)
Label_9.grid(row=6, column=0)


Label_1 =Label(root, font=('lato black', 7,'bold'), text="",padx=2,pady=2, bg="white",fg ="black")
Label_1.grid(row=9, column=0,sticky=W)

Label_9 =Button(root, font=('arial', 15,'bold'), text="   Clear Contents  ",padx=2,pady=2, bg="red",fg = "white",command=clear_all)
Label_9.grid(row=10, column=0)


root.mainloop()
